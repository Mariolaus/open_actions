name: "Build Image And Deploy to Cloud Run"
description: ""
inputs:
  credentials_json:
    description: "Credentials JSON secret"
    required: true
  PROJECT_ID:
    description: "Gcloud project ID"
    required: true
  SERVICE:
    description: "Cloud Run service name"
    required: true
  REGION:
    description: "Cloud Run service name"
    required: true
    default: "europe-west8"

runs:
  using: "composite"
  steps:

    #Authenticate in Google
    - name: Google Auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ inputs.credentials_json }}

    # Set up Google Cloud SDK
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ inputs.PROJECT_ID }}

    # Docker configuration
    - name: Configure Docker for Google Artifact Registry
      run: gcloud auth configure-docker ${{ inputs.REGION }}-docker.pkg.dev --quiet
      shell: bash

    # Build Image
    - id: build_image
      env:
        DOCKER_BUILDKIT: 1  # Enable Docker BuildKit
      run: |
        image_id="${{ inputs.REGION }}-docker.pkg.dev/${{ inputs.PROJECT_ID }}/${{ inputs.SERVICE }}/${{ inputs.SERVICE }}:${{ github.sha }}"
        echo "${{ env.DEVOPS_MICROVM_RSA }}" > gcp_run_ssh_rsa_key
        echo "${{ env.READ_ALL_REPOS_TOKEN }}" > read_all_repos_token
        echo "${{ env.DEVOPS_GCLOUD_CREDENTIALS }}" > gcloud_credentials
        docker build \
          --secret id=GCP_RUN_SSH_RSA_KEY,src=gcp_run_ssh_rsa_key \
          --secret id=READ_ALL_REPOS_TOKEN,src=read_all_repos_token \
          --secret id=GCP_RUN_SSH_GCLOUD_CREDENTIALS,src=gcloud_credentials \
          -t $image_id .
        echo "image_id=$image_id" >> $GITHUB_OUTPUT 
      shell: bash

    # Push image in Artifact Registry
    - name: Push Docker Image to Artifact Registry
      run: |
        docker push "${{ steps.build_image.outputs.image_id }}"
      shell: bash

    # Deploy su Cloud Run
    - name: Deploy to Cloud Run
      id: deploy_cr
      uses: google-github-actions/deploy-cloudrun@v1
      with:
        service: ${{ inputs.SERVICE }}
        region: ${{ inputs.REGION }}
        image: "${{ steps.build_image.outputs.image_id }}"