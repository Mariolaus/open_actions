name: "Build Image And Deploy to Cloud Run"
description: ""
inputs:
  PROJECT_ID:
    description: "Gcloud project ID"
    required: true
  SERVICE:
    description: "Cloud Run service name"
    required: true
  REGION:
    description: "Gcloud Region"
    required: true
    default: "europe-west8"
  run_command:
    description: "Docker build command"
    required: true

runs:
  using: "composite"
  steps:

    # Checkout repo
    - name: Check out the repository
      uses: actions/checkout@v3

    #Authenticate in Google
    - name: Google Auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ env.credentials_json }}

    # Set up Google Cloud SDK
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ inputs.PROJECT_ID }}

    # Docker configuration
    - name: Configure Docker for Google Artifact Registry
      run: gcloud auth configure-docker ${{ inputs.REGION }}-docker.pkg.dev --quiet
      shell: bash

    # check if repository exists
    - name: Check if Artifact Registry Repository Exists
      id: check_repo
      run: |
        # Check if the repository exists by trying to describe it
        response=$(gcloud artifacts repositories describe ${{ inputs.SERVICE }} --location=${{ inputs.REGION }} --format="value(name)" || echo "not_found")
        if [ "$response" == "not_found" ]; then
          echo "Repository does not exist. Proceeding with creation."
          echo "create_repo=true" >> $GITHUB_ENV
        else
          echo "Repository already exists."
          echo "create_repo=false" >> $GITHUB_ENV
        fi
      shell: bash

    # create repository if it does not exist
    - name: Create Artifact Registry Repository
      if: env.create_repo == 'true'
      run: |
        gcloud artifacts repositories create ${{ inputs.SERVICE }} \
          --repository-format=Docker \
          --location=${{ inputs.REGION }} \
          --description="Docker repository for ${{ inputs.SERVICE }} project"
      shell: bash

    # Create a new Git tag
    - name: Create Git Tag
      id: create_tag
      run: |
        TAG="v$(date +'%Y-%m-%d%=H%M')"  # Example tag: vYYYYMMDDHHMM
        echo "Created Git tag: $TAG"
        # Create and push the tag to GitHub
        git tag $TAG
        git push origin $TAG
        # Save the tag in an environment variable
        echo "GIT_TAG=$TAG" >> $GITHUB_ENV
      shell: bash

      # Build Image
    - id: build_image
      env:
        DOCKER_BUILDKIT: 1
      run: |
        image_id="${{ inputs.REGION }}-docker.pkg.dev/${{ inputs.PROJECT_ID }}/${{ inputs.SERVICE }}/${{ inputs.SERVICE }}:${{ env.GIT_TAG }}"
        ${{ inputs.run_command }}
        echo "image_id=$image_id" >> $GITHUB_OUTPUT
      shell: bash

    # Push image in Artifact Registry
    - name: Push Docker Image to Artifact Registry
      run: |
        docker push "${{ steps.build_image.outputs.image_id }}"
      shell: bash

    # Deploy su Cloud Run
    - name: Deploy to Cloud Run
      id: deploy_cr
      uses: google-github-actions/deploy-cloudrun@v1
      with:
        service: ${{ inputs.SERVICE }}
        region: ${{ inputs.REGION }}
        image: "${{ steps.build_image.outputs.image_id }}"