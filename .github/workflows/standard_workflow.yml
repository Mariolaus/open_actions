name: Deploy to Cloud Run

on:
  workflow_call:
    inputs:
      service_name:
        description: "Service name for Cloud Run"
        required: true
        type: string
      action_url:
        description: "Base URL for IP management API"
        required: true
        type: string
      run_tests:
        description: "should it run python tests?"
        required: true
        type: boolean
      run_command:
        description: "XXX"
        required: false
        type: string

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      # Add IP to whitelist
      - name: Enable Github worker IP
        id: add_ip
        uses: Mariolaus/open_actions/.github/actions/add_worker_ip@main
        env:
          credentials_json: '${{ secrets.GCP_BUILD_AND_DEPLOY_PROD }}'
        with:
          ip: $(curl ifconfig.me)
          url: "${{ inputs.action_url }}/add_ip?ip="

      - name: run tests
        if: ${{ inputs.run_tests }}
        id: run_tests
        uses: Mariolaus/open_actions/.github/actions/run_tests@main

      # Build image and deploy to Cloud Run if we are on branch PROD only
      - name: Build image and Deploy to Cloud Run
        if: github.ref == 'refs/heads/PROD'
        uses: Mariolaus/open_actions/.github/actions/build_image_and_deploy_to_cloud_run@main
        env:
          READ_ALL_REPOS_TOKEN: ${{ secrets.READ_ALL_REPOS_TOKEN }}
          GCP_BUILD_AND_DEPLOY_PROD: ${{ secrets.GCP_BUILD_AND_DEPLOY_PROD }}
          DEVOPS_MICROVM_RSA: ${{ secrets.DEVOPS_MICROVM_RSA }}
          DEVOPS_GCLOUD_CREDENTIALS: ${{ secrets.DEVOPS_GCLOUD_CREDENTIALS }}
        with:
          PROJECT_ID: ${{ secrets.PROJECT_ID_GCP_PROD }}
          SERVICE: ${{ inputs.service_name }}
          run_command: ${{ inputs.run_command }}

      # Build image and deploy to Cloud Run if we are on branch UAT only
      - name: UAT -- Build image and Deploy to Cloud Run
        if: github.ref != 'refs/heads/PROD'
        uses: Mariolaus/open_actions/.github/actions/build_image_and_deploy_to_cloud_run@main
        env:
          READ_ALL_REPOS_TOKEN: ${{ secrets.READ_ALL_REPOS_TOKEN }}
          GCP_BUILD_AND_DEPLOY_PROD: ${{ secrets.GCP_BUILD_AND_DEPLOY_UAT }}
        with:
          PROJECT_ID: ${{ secrets.PROJECT_ID_GCP_UAT }}
          SERVICE: ${{ inputs.service_name }}
          run_command: ${{ inputs.run_command }}

      # Clean up: Remove IP from whitelist
      - name: Disable Github worker IP
        uses: Mariolaus/open_actions/.github/actions/delete_worker_ip@main
        if: always()
        with:
          github_id: "${{ steps.add_ip.outputs.github_id }}"
          credentials_json: '${{ secrets.GCP_BUILD_AND_DEPLOY_PROD }}'
          url: "${{ inputs.action_url }}/delete_ip?github_id="
